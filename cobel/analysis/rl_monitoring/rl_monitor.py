# basic imports
import pyqtgraph as pg
import PyQt5 as qt
                    

class AbstractMonitor():
    
    def __init__(self, gui_parent: pg.GraphicsLayoutWidget, visual_output: bool):
        '''
        Abstract monitor class.
        
        Parameters
        ----------
        gui_parent :                        The main window for visualization.
        visual_output :                     If true, the learning progress will be plotted.
        
        Returns
        ----------
        None
        '''
        # store the GUI parent
        self.gui_parent = gui_parent
        # shall visual output be provided?
        self.visual_output = visual_output

    def clear_plots(self):
        '''
        This function clears the plots generated by the monitor.
        
        Parameters
        ----------
        None
        
        Returns
        ----------
        None
        '''
        raise NotImplementedError('.clear_plots() function not implemented!')
    
    def update(self, logs: dict):
        '''
        This function is called when a trial ends. Here, information about the monitored variables is memorized, and the monitor graphs are updated.
        
        Parameters
        ----------
        logs :                              Information from the reinforcement learning subsystem.
        
        Returns
        ----------
        None
        '''        
        raise NotImplementedError('.update() function not implemented!')
                
    def get_trace(self):
        '''
        This function returns the trace of the monitored variable.
        
        Parameters
        ----------
        None
        
        Returns
        ----------
        trace :                             The trace of the monitored variable.
        '''       
        raise NotImplementedError('.get_trace() function not implemented!')
        
    def refresh_visualization(self):
        '''
        This function refreshes the Qt visualization.
        
        Parameters
        ----------
        None
        
        Returns
        ----------
        None
        '''        
        if hasattr(qt.QtGui, 'QApplication'):
            qt.QtGui.QApplication.instance().processEvents()
        else:
            qt.QtWidgets.QApplication.instance().processEvents()
        